import { z } from "zod";

import { SharedParamsSchema } from "../_shared/_shared.validators";

export const UserParamsSchema = z.object({
  /** The ID of the user */
  id: z.number().int().positive(),
});

export const UserSchema = z.object({
  __v: z.number().optional(),
  address: z.object({
    city: z.string(),
    geolocation: z.object({
      lat: z.coerce.number(),
      long: z.coerce.number(),
    }),
    number: z.number(),
    street: z.string(),
    zipcode: z.string(),
  }),
  email: z.string().email(),
  id: z.number().int().positive(),
  name: z.object({
    firstname: z.string(),
    lastname: z.string(),
  }),
  password: z.string(),
  phone: z.string(),
  username: z.string(),
});

export const CreateUserParamsSchema = UserSchema.omit({
  // An ID will be generated by the server
  id: true,
});

export const CreateUserSchema = UserSchema.pick({
  id: true,
});

export const UpdateUserParamsSchema = UserSchema.pick({
  id: true,
}).and(UserSchema.partial());

export const UpdateUserSchema = UserSchema.pick({
  id: true,
});

export const DeleteUserParamsSchema = z.object({
  /** The ID of the user to delete */
  id: z.number().int().positive(),
});

// ------------------------------------------------------------------------

export const UsersParamsSchema = SharedParamsSchema.extend({});

export const UsersSchema = z.array(UserSchema);
